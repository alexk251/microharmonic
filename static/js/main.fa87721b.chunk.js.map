{"version":3,"sources":["audioContext.js","audio/Sequencer.js","noteHelpers.js","Composer.js","Footer.js","GAListener.js","Header.js","audio/Oscillator.js","Keyboard.js","KeyboardLegend.js","Label.js","CustomSettings.js","EqualTemperamentSettings.js","Settings.js","Tutorial.js","App.js","index.js"],"names":["audioContext","window","AudioContext","Sequencer","sequences","totalDuration","gain","play","playSequences","playSequencesInterval","setInterval","stop","clearInterval","oscillators","forEach","oscillator","sequence","playSequence","push","this","context","now","currentTime","gainNode","createGain","value","connect","destination","createOscillator","type","start","setValueAtTime","freq","offset","duration","frequency","Math","max","map","getEndTime","CENTS_IN_OCTAVE","getCustomCentsForNote","note","customCentValues","centOffset","length","octave","floor","getFrequency","rootFrequency","numOctaves","numSteps","pow","getFrequencyRatio","getCentsForNote","config","useCustomCentValues","getFrequencyForNote","midiNumber","lowestNoteMidiNumber","MidiNumbers","fromNote","lowestNote","A440","cents","getFrequencyFromCents","getStepFrequencies","_","range","getNoteFromOffset","sortedNotes","sortBy","Object","keys","selectedNotes","str","parseInt","numNotes","remainder","getNoteLabel","Step","props","onClick","selected","onDeselect","onSelect","className","classNames","current","draggable","onDragEnter","onDragStart","ComposerSettings","onPlay","onStop","onClear","onExport","Composer","stepDuration","getStepDuration","getNumSteps","selectedSteps","frequencies","selectedStepIndexes","filter","timeIndex","buildSequences","state","currentAudioSequencer","AudioSequencer","updateCurrentStepAtInterval","setState","currentStep","clearSelectedSteps","getInitialSelectedSteps","onSelectItem","update","$set","steps","stepIndex","fetch","method","headers","Accept","body","JSON","stringify","short_id","shortid","generate","title","json_value","scaleConfig","bpm","getBeatsPerMinute","then","response","console","log","renderRow","key","round","renderRowSteps","isSelected","bind","shortID","json","data","nextProps","isEqual","getNumNotes","descendingNoteOffsets","React","Component","Footer","href","sendPageView","location","ReactGA","set","page","pathname","pageview","GAListener","children","trackingId","history","useEffect","initialize","listen","propTypes","PropTypes","node","string","shape","func","withRouter","Header","style","paddingTop","paddingBottom","width","height","left","fontWeight","to","Oscillator","options","disconnect","KEY_LABELS_IN_ROWS","KEY_LABELS","join","Keyboard","startNote","stopNote","onKeyDown","event","ctrlKey","metaKey","shiftKey","onKeyActive","onKeyUp","onKeyInactive","activeNotes","bindEvents","addEventListener","removeEventListener","keyLabel","getNoteFromKeyLabel","assign","indexOf","getOffsetFromKeyLabel","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchCancel","onTouchEnd","reversedRowIndexes","rowIndex","keyLabels","split","renderKey","defaultProps","KeyboardLegend","Label","DEFAULT_PRESET_NAME","PRESETS","name","label","values","PRESETS_MAP","reduce","elem","stringifyCustomCentValues","CustomSettings","onChangeCustomCentValues","customCentValuesStr","target","onSaveCustomCentValues","trim","parseFloat","sort","a","b","some","isNaN","Error","parseCustomCentValuesStr","setConfig","error","alert","onChangePreset","presetName","rows","onChange","preset","EqualTemperamentSettings","onChangeLowestNote","reset","onChangeNumOctaves","onChangeNumSteps","onChangeSelectedNotes","checked","omit","onClickResetSelectedNotes","index","pluralize","noteName","renderStepSettings","renderLowestNoteSetting","renderNotePicker","Settings","useCustom","toggleCustomSettings","Tutorial","src","alt","scrolling","frameBorder","allowFullScreen","SettingsWrapper","App","exact","path","render","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fa87721b.chunk.js","sourcesContent":["const audioContext = new window.AudioContext();\n\nexport default audioContext;\n","/*\n//TODO cleanup docs\nwindow.seq = new Sequencer(new window.AudioContext(), [\n  [\n    [440, 0, 1],\n    [400, 1, 1],\n    [550, 2, 1],\n    [480, 3, 1],\n  ],\n  [\n    [480, 0, 1],\n    [410, 1, 1],\n    [590, 2, 0.5],\n    [420, 5, 2],\n  ],\n]);\n*/\n\nfunction getEndTime(sequence) {\n  return Math.max(\n    ...sequence.map(([freq, offset, duration]) => {\n      return offset + duration;\n    }),\n  );\n}\n\n// TODO: refactor into objects instead of arrays\nclass Sequencer {\n  constructor({ audioContext, sequences, totalDuration, gain } = {}) {\n    this.context = audioContext;\n    this.gain = gain;\n    this.sequences = sequences;\n    this.totalDuration = totalDuration;\n    this.oscillators = [];\n    this.playSequencesInterval = null;\n  }\n\n  play = () => {\n    this.playSequences();\n    this.playSequencesInterval = setInterval(this.playSequences, this.totalDuration * 1000);\n  };\n\n  stop = () => {\n    clearInterval(this.playSequencesInterval);\n\n    this.oscillators.forEach((oscillator) => {\n      oscillator.stop();\n    });\n    this.oscillators = [];\n  };\n\n  playSequences = () => {\n    this.sequences.forEach((sequence) => {\n      const oscillator = this.playSequence(sequence);\n      this.oscillators.push(oscillator);\n    });\n  };\n\n  playSequence(sequence) {\n    const now = this.context.currentTime;\n\n    const gainNode = this.context.createGain();\n    gainNode.gain.value = this.gain;\n    gainNode.connect(this.context.destination);\n\n    const oscillator = this.context.createOscillator();\n    oscillator.type = 'sine';\n    oscillator.connect(gainNode);\n    oscillator.start(now);\n\n    gainNode.gain.setValueAtTime(0, now);\n\n    sequence.forEach(([freq, offset, duration]) => {\n      gainNode.gain.setValueAtTime(this.gain, now + offset);\n      gainNode.gain.setValueAtTime(0, now + offset + duration);\n      oscillator.frequency.setValueAtTime(freq, now + offset);\n    });\n\n    oscillator.stop(now + getEndTime(sequence));\n    return oscillator;\n  }\n}\n\nexport default Sequencer;\n","import _ from 'lodash';\nimport { MidiNumbers } from 'piano-utils';\n\nexport const CENTS_IN_OCTAVE = 1200;\n\nfunction getFrequencyRatio(note, numOctaves, numSteps) {\n  return Math.pow(2, note * (numOctaves / numSteps));\n}\n\nfunction getCustomCentsForNote(note, customCentValues) {\n  const offset = note % customCentValues.length;\n  const centOffset = customCentValues[offset];\n  const octave = Math.floor(note / customCentValues.length);\n  return CENTS_IN_OCTAVE * octave + centOffset;\n}\n\nexport function getFrequency(rootFrequency, note, numOctaves, numSteps) {\n  return rootFrequency * getFrequencyRatio(note, numOctaves, numSteps);\n}\n\nexport function getFrequencyFromCents(rootFrequency, cents) {\n  return rootFrequency * Math.pow(2, cents / CENTS_IN_OCTAVE);\n}\n\nexport function getCentsForNote(config, note) {\n  if (config.useCustomCentValues) {\n    return getCustomCentsForNote(note, config.customCentValues);\n  } else {\n    return ((CENTS_IN_OCTAVE * config.numOctaves) / config.numSteps) * note;\n  }\n}\n\n// TODO: port this to piano-utils\n// http://subsynth.sourceforge.net/midinote2freq.html\nfunction getFrequencyForMidiNumber(midiNumber) {\n  const A440 = 440;\n  return (A440 / 32) * Math.pow(2, (midiNumber - 9) / 12);\n}\n\nexport function getFrequencyForNote(config, note) {\n  const lowestNoteMidiNumber = MidiNumbers.fromNote(config.lowestNote);\n  const rootFrequency = getFrequencyForMidiNumber(lowestNoteMidiNumber);\n\n  if (config.useCustomCentValues) {\n    const centValue = getCustomCentsForNote(note, config.customCentValues);\n    return getFrequencyFromCents(rootFrequency, centValue);\n  } else {\n    return getFrequency(rootFrequency, note, config.numOctaves, config.numSteps);\n  }\n}\n\nexport function getStepFrequencies(config) {\n  return _.range(config.numSteps + 1).map((offset) => {\n    const note = getNoteFromOffset(config, offset);\n    return getFrequencyForNote(config, note);\n  });\n}\n\n// Notes are a numeric index into the microtone scale.\n// For example, given a standard 12 EDO scale, note 0 corresponds to lowestNote, note 12 corresponds\n// to 1200 cents above lowestNote, etc.\n//\n// Because you can select specific notes to include in the scale with state.config.selectedNotes,\n// we have offset which is slightly different from notes.\n// For example, if selectedNotes == {0, 3, 6}, offset 0 corresponds to note 0, offset 2 corresponds to note 6,\n// and offset 3 corresponds to note 12.\nexport function getNoteFromOffset(config, offset) {\n  const sortedNotes = _.sortBy(Object.keys(config.selectedNotes).map((str) => parseInt(str, 10)));\n  const numNotes = sortedNotes.length;\n  if (numNotes > 0) {\n    const octaves = Math.floor(offset / numNotes);\n    const remainder = offset % numNotes;\n    return octaves * config.numSteps + sortedNotes[remainder];\n  } else {\n    return offset;\n  }\n}\n\n// In 12EDO, 0 -> 1, 11 -> 12, 12 -> 1, 13 -> 2\nexport function getNoteLabel(config, note) {\n  return (note % config.numSteps) + 1;\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport classNames from 'classnames';\nimport shortid from 'shortid';\nimport update from 'immutability-helper';\n\nimport audioContext from './audioContext';\nimport AudioSequencer from './audio/Sequencer';\nimport { getCentsForNote, getNoteFromOffset, getStepFrequencies } from './noteHelpers';\n\n// TODO: rename timeIndex => stepIndex\nfunction buildSequences({ selectedSteps, frequencies, stepDuration }) {\n  return Object.keys(selectedSteps)\n    .map((offset) => {\n      const selectedStepIndexes = Object.keys(selectedSteps[offset]).filter((timeIndex) => {\n        return selectedSteps[offset][timeIndex];\n      });\n      const frequency = frequencies[offset % frequencies.length];\n      return selectedStepIndexes.map((timeIndex) => {\n        return [frequency, timeIndex * stepDuration, stepDuration];\n      });\n    })\n    .filter((sequence) => {\n      return sequence.length > 0;\n    });\n}\n\nfunction Step(props) {\n  const onClick = props.selected ? props.onDeselect : props.onSelect;\n  // TODO: implement with onMouseDown instead? would change a flag on mouseDown so mouseEnter selects\n  return (\n    <div\n      className={classNames('col sequence-item py-1', {\n        'sequence-item-selected': props.selected,\n        'sequence-item-current': props.current,\n      })}\n      draggable\n      onClick={onClick}\n      onDragEnter={props.onSelect}\n      onDragStart={props.onSelect}\n    />\n  );\n}\n\nfunction ComposerSettings(props) {\n  return (\n    <div className=\"d-flex flex-row mb-3\">\n      <div className=\"flex-1\">\n        <div className=\"btn-group\">\n          <button className=\"btn btn-primary\" onClick={props.onPlay}>\n            Play\n          </button>\n          <button className=\"btn btn-secondary\" onClick={props.onStop}>\n            Stop\n          </button>\n        </div>\n        <button className=\"ml-2 btn btn-outline-secondary\" onClick={props.onClear}>\n          Clear\n        </button>\n      </div>\n      <div>\n        <button className=\"btn btn-outline-secondary\" onClick={props.onExport}>\n          Export as JSON\n        </button>\n      </div>\n    </div>\n  );\n}\n\nclass Composer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const frequencies = getStepFrequencies(props.config);\n    this.state = {\n      // TODO: move out of state? create higher order component\n      frequencies,\n      selectedSteps: this.getInitialSelectedSteps(frequencies),\n      currentStep: 0,\n    };\n\n    this.updateCurrentStepAtInterval = null;\n    this.currentAudioSequencer = null;\n  }\n\n  componentDidMount() {\n    if (this.props.shortID) {\n      fetch(`/api/compositions/${this.props.shortID}`)\n        .then((response) => response.json())\n        .then(({ data }) => {\n          // TODO: load scale config\n          console.log('loaded composition', data);\n        });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!_.isEqual(this.props.config, nextProps.config)) {\n      this.onStop();\n      const frequencies = getStepFrequencies(nextProps.config);\n      this.setState({\n        frequencies,\n        selectedSteps: this.getInitialSelectedSteps(frequencies),\n      });\n    }\n  }\n\n  onPlay = () => {\n    this.onStop();\n    const stepDuration = this.getStepDuration();\n    const numSteps = this.getNumSteps();\n    const sequences = buildSequences({\n      selectedSteps: this.state.selectedSteps,\n      frequencies: this.state.frequencies,\n      stepDuration,\n    });\n    this.currentAudioSequencer = new AudioSequencer({\n      audioContext: audioContext,\n      sequences: sequences,\n      totalDuration: numSteps * stepDuration,\n      gain: this.props.gain,\n    });\n    this.currentAudioSequencer.play();\n\n    this.updateCurrentStepAtInterval = setInterval(() => {\n      this.setState({\n        currentStep: (this.state.currentStep + 1) % numSteps,\n      });\n    }, stepDuration * 1000);\n  };\n\n  clearSelectedSteps = (frequencies) => {\n    this.setState({\n      selectedSteps: this.getInitialSelectedSteps(frequencies),\n    });\n  };\n\n  onClear = () => {\n    this.onStop();\n    this.clearSelectedSteps(this.state.frequencies);\n  };\n\n  onStop = () => {\n    this.setState({\n      currentStep: 0,\n    });\n    clearInterval(this.updateCurrentStepAtInterval);\n\n    if (this.currentAudioSequencer) {\n      this.currentAudioSequencer.stop();\n    }\n  };\n\n  onSelectItem = (offset, timeIndex, value) => {\n    this.setState({\n      selectedSteps: update(this.state.selectedSteps, {\n        [offset]: {\n          [timeIndex]: { $set: value },\n        },\n      }),\n    });\n  };\n\n  onExport = () => {\n    const steps = _.range(this.getNumSteps()).map((stepIndex) => {\n      return Object.keys(this.state.selectedSteps)\n        .map((offset) => {\n          return this.state.selectedSteps[offset][stepIndex] ? offset : null;\n        })\n        .filter((offset) => offset);\n    });\n\n    fetch('/api/compositions', {\n      method: 'post',\n      headers: {\n        Accept: 'application/json, text/plain, */*',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        short_id: shortid.generate(),\n        title: 'untitled',\n        json_value: {\n          scaleConfig: this.props.config,\n          bpm: this.getBeatsPerMinute(),\n          // steps[0] contains an array of the notes at step 0\n          steps: steps,\n        },\n      }),\n    }).then((response) => {\n      console.log('TODO handle composition creation');\n    });\n  };\n\n  getNumNotes(frequencies) {\n    return frequencies.length;\n  }\n\n  getNumSteps() {\n    return 16;\n  }\n\n  getBeatsPerMinute() {\n    return 300;\n  }\n\n  getStepDuration() {\n    return 60 / this.getBeatsPerMinute();\n  }\n\n  getInitialSelectedSteps(frequencies) {\n    const selectedSteps = {};\n    _.range(this.getNumNotes(frequencies)).forEach((offset) => {\n      selectedSteps[offset] = {};\n      _.range(this.getNumSteps()).forEach((timeIndex) => {\n        selectedSteps[offset][timeIndex] = false;\n      });\n    });\n    return selectedSteps;\n  }\n\n  renderRow = (offset) => {\n    const note = getNoteFromOffset(this.props.config, offset);\n    const cents = getCentsForNote(this.props.config, note);\n    return (\n      <div className=\"row no-gutters\" key={offset}>\n        <div className=\"col-1\">\n          <div className=\"text-right pr-2 py-1 line-height-1\">\n            {note}\n            <br />\n            <small>{Math.round(cents)}</small>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"row no-gutters\">{this.renderRowSteps(offset)}</div>\n        </div>\n      </div>\n    );\n  };\n\n  renderRowSteps = (offset) => {\n    return _.range(this.getNumSteps()).map((stepIndex) => {\n      const isSelected = this.state.selectedSteps[offset][stepIndex];\n      return (\n        <Step\n          selected={isSelected}\n          current={stepIndex === this.state.currentStep}\n          onSelect={this.onSelectItem.bind(this, offset, stepIndex, true)}\n          onDeselect={this.onSelectItem.bind(this, offset, stepIndex, false)}\n          key={stepIndex}\n        />\n      );\n    });\n  };\n\n  render() {\n    const descendingNoteOffsets = _.range(this.getNumNotes(this.state.frequencies) - 1, -1, -1);\n    return (\n      <div>\n        <ComposerSettings\n          onPlay={this.onPlay}\n          onStop={this.onStop}\n          onClear={this.onClear}\n          onExport={this.onExport}\n        />\n        {descendingNoteOffsets.map((offset) => this.renderRow(offset))}\n      </div>\n    );\n  }\n}\n\nexport default Composer;\n","import React from 'react';\nimport classNames from 'classnames';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className={classNames('d-flex align-items-end', this.props.className)}>\n        <div className=\"container text-center small my-5\">\n          <div>\n            Built by <a href=\"https://www.kevinqi.com/\">@kevinsqi</a>\n          </div>\n          <div>\n            <a href=\"https://github.com/kevinsqi/microharmonic/\">View source on Github</a>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// For tracking GA with react-router\n// https://github.com/react-ga/react-ga/issues/122#issuecomment-500497186\nimport { useEffect } from 'react';\nimport ReactGA from 'react-ga';\nimport { withRouter } from 'react-router';\nimport PropTypes from 'prop-types';\n\nfunction sendPageView(location) {\n  ReactGA.set({ page: location.pathname });\n  ReactGA.pageview(location.pathname);\n}\n\nfunction GAListener({ children, trackingId, history }) {\n  useEffect(() => {\n    ReactGA.initialize(trackingId);\n    sendPageView(history.location);\n    return history.listen(sendPageView);\n  }, [history, trackingId]);\n\n  return children;\n}\n\nGAListener.propTypes = {\n  children: PropTypes.node,\n  trackingId: PropTypes.string,\n  history: PropTypes.shape({\n    listen: PropTypes.func,\n  }),\n};\n\nexport default withRouter(GAListener);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n/*\nfunction NavButton(props) {\n  return (\n    <NavLink\n      className=\"btn btn-outline-light btn-lg text-left line-height-1 opacity-60\"\n      activeClassName=\"opacity-100\"\n      to={props.to}\n      exact\n    >\n      <div className=\"text-1\">{props.subtitle}</div>\n      <div className=\"mt-1\">{props.title}</div>\n    </NavLink>\n  );\n}\n*/\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <nav\n        className=\"bg-blue d-flex align-items-end\"\n        style={{\n          paddingTop: 60,\n          paddingBottom: 60,\n        }}\n      >\n        <div className=\"container\">\n          <div className=\"d-flex\">\n            <div className=\"mx-auto line-height-1\">\n              <div className=\"position-relative\" style={{ width: 200, height: 110 }}>\n                <div className=\"position-absolute left-0 Parallelogram\" />\n                <div\n                  className=\"position-absolute height-full d-flex flex-column justify-content-center\"\n                  style={{ left: 30 }}\n                >\n                  <NavLink className=\"text-5 text-white\" style={{ fontWeight: 200 }} to=\"/\">\n                    microharmonic\n                  </NavLink>\n                  <div className=\"mt-1\">\n                    <small className=\"text-light\">a web microtone keyboard</small>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {/*\n            <ul className=\"list-inline list-unstyled m-0\">\n              <li className=\"list-inline-item\">\n                <NavButton\n                  to=\"/tutorial\"\n                  title=\"Tutorial\"\n                  subtitle=\"New to microtones?\"\n                />\n              </li>\n              <li className=\"list-inline-item\">\n                <NavButton to=\"/\" title=\"Keyboard\" subtitle=\"Explore\" />\n              </li>\n              <li className=\"list-inline-item\">\n                <NavButton\n                  to=\"/composer\"\n                  title=\"Composer\"\n                  subtitle=\"Write\"\n                />\n              </li>\n            </ul>\n            */}\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","// See e.g. https://github.com/jxnblk/bumpkit/blob/master/src/Bumpkit.js\n// for audio org example\n\nclass Oscillator {\n  constructor(options = {}) {\n    this.audioContext = options.audioContext;\n    this.gainNode = this.audioContext.createGain();\n    this.gainNode.gain.value = options.gain;\n    this.gainNode.connect(this.audioContext.destination);\n\n    this.oscillators = {};\n  }\n\n  start(freq) {\n    if (this.oscillators[freq]) {\n      return;\n    }\n\n    let oscillator = this.audioContext.createOscillator();\n    oscillator.type = 'sine';\n    oscillator.frequency.value = freq;\n    oscillator.connect(this.gainNode);\n    oscillator.start(0);\n\n    console.log('playing frequency at value', oscillator.frequency.value);\n\n    this.oscillators[freq] = oscillator;\n  }\n\n  stop(freq) {\n    if (!this.oscillators[freq]) {\n      return;\n    }\n\n    this.oscillators[freq].stop(0);\n    this.oscillators[freq].disconnect();\n    delete this.oscillators[freq];\n  }\n}\n\nexport default Oscillator;\n","import React from 'react';\nimport _ from 'lodash';\nimport classNames from 'classnames';\n\nimport audioContext from './audioContext';\nimport Oscillator from './audio/Oscillator';\nimport {\n  getCentsForNote,\n  getFrequencyForNote,\n  getNoteFromOffset,\n  getNoteLabel,\n  CENTS_IN_OCTAVE,\n} from './noteHelpers';\n\n// This has to be in pitch ascending order to be able to use getOffsetFromKeyLabel\nconst KEY_LABELS_IN_ROWS = [`zxcvbnm,./`, `asdfghjkl;`, `qwertyuiop`, `1234567890`];\n\nconst KEY_LABELS = KEY_LABELS_IN_ROWS.join(''); // keys in ascending pitch order\n\nfunction getOffsetFromKeyLabel(keyLabel) {\n  const offset = KEY_LABELS.indexOf(keyLabel);\n  if (offset !== -1) {\n    return offset;\n  }\n  return null;\n}\n\n// TODO: rename bindEvents => enableKeyboard, and don't show\n// keyboard letters if disabled. or remove the prop\nclass Keyboard extends React.Component {\n  static defaultProps = {\n    bindEvents: true,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeNotes: {},\n    };\n\n    this.oscillator = new Oscillator({\n      audioContext: audioContext,\n      gain: props.gain,\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.bindEvents) {\n      window.addEventListener('keydown', this.onKeyDown);\n      window.addEventListener('keyup', this.onKeyUp);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.bindEvents) {\n      window.removeEventListener('keydown', this.onKeyDown);\n      window.removeEventListener('keyup', this.onKeyUp);\n    }\n  }\n\n  startNote = (note) => {\n    const freq = getFrequencyForNote(this.props.config, note);\n    this.oscillator.start(freq);\n  };\n\n  stopNote = (note) => {\n    const freq = getFrequencyForNote(this.props.config, note);\n    this.oscillator.stop(freq);\n  };\n\n  onKeyDown = (event) => {\n    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n    this.onKeyActive(event.key);\n  };\n\n  onKeyUp = (event) => {\n    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n    this.onKeyInactive(event.key);\n  };\n\n  onKeyActive(keyLabel) {\n    const note = this.getNoteFromKeyLabel(keyLabel);\n    if (note !== null) {\n      this.startNote(note);\n\n      this.setState({\n        activeNotes: Object.assign({}, this.state.activeNotes, { [note]: true }),\n      });\n    }\n  }\n\n  onKeyInactive(keyLabel) {\n    const note = this.getNoteFromKeyLabel(keyLabel);\n    if (note !== null) {\n      this.stopNote(note);\n\n      this.setState({\n        activeNotes: Object.assign({}, this.state.activeNotes, { [note]: false }),\n      });\n    }\n  }\n\n  getNoteFromKeyLabel(keyLabel) {\n    const offset = getOffsetFromKeyLabel(keyLabel);\n    return getNoteFromOffset(this.props.config, offset);\n  }\n\n  renderKey(keyLabel) {\n    const note = this.getNoteFromKeyLabel(keyLabel);\n    const cents = getCentsForNote(this.props.config, note);\n    return (\n      <button\n        className={classNames('Key', {\n          'Key--octave': cents % CENTS_IN_OCTAVE === 0,\n          'Key--active': this.state.activeNotes[note],\n        })}\n        onMouseDown={this.onKeyActive.bind(this, keyLabel)}\n        onMouseUp={this.onKeyInactive.bind(this, keyLabel)}\n        onMouseLeave={this.onKeyInactive.bind(this, keyLabel)}\n        onTouchStart={this.onKeyActive.bind(this, keyLabel)}\n        onTouchCancel={this.onKeyInactive.bind(this, keyLabel)}\n        onTouchEnd={this.onKeyInactive.bind(this, keyLabel)}\n        key={note}\n      >\n        <div className=\"Key__note\">{getNoteLabel(this.props.config, note)}</div>\n        <div className=\"Key__cents small\">{Math.round(cents)}</div>\n        <div className=\"Key__shortcut small\">{keyLabel}</div>\n      </button>\n    );\n  }\n\n  render() {\n    const reversedRowIndexes = _.range(KEY_LABELS_IN_ROWS.length - 1, -1, -1);\n    return (\n      <div className={classNames('Keyboard', this.props.className)}>\n        {reversedRowIndexes.map((rowIndex) => {\n          const keyLabels = KEY_LABELS_IN_ROWS[rowIndex].split('');\n          return (\n            <div className={classNames('Keyrow', `Keyrow--${rowIndex}`)} key={rowIndex}>\n              {keyLabels.map((keyLabel) => this.renderKey(keyLabel))}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Keyboard;\n","import React from 'react';\nimport classNames from 'classnames';\n\nfunction KeyboardLegend({ className }) {\n  return (\n    <div className={classNames('d-flex opacity-80', className)}>\n      <div style={{ width: 60 }}>\n        <button className=\"Key\">\n          <div className=\"Key__note\">4</div>\n          <div className=\"Key__cents small\">150</div>\n          <div className=\"Key__shortcut small\">v</div>\n        </button>\n      </div>\n\n      <div className=\"ml-4 mt-1\">\n        <div className=\"Key__note\">Note number</div>\n        <div className=\"Key__cents small\">Cent value</div>\n        <div className=\"Key__shortcut bg-white small\">Keyboard shortcut</div>\n      </div>\n    </div>\n  );\n}\n\nexport default KeyboardLegend;\n","import React from 'react';\n\nfunction Label(props) {\n  return <label className=\"Label text-secondary\">{props.children}</label>;\n}\n\nexport default Label;\n","import React from 'react';\nimport _ from 'lodash';\n\nimport Label from './Label';\nimport { CENTS_IN_OCTAVE } from './noteHelpers';\n\nconst DEFAULT_PRESET_NAME = '12_ET';\n\nconst PRESETS = [\n  {\n    name: '12_ET',\n    label: '12 tone equal temperament',\n    values: _.range(0, CENTS_IN_OCTAVE, 100),\n  },\n  {\n    name: 'just_intonation',\n    label: 'Just intonation',\n    values: [\n      0,\n      111.73,\n      203.91,\n      315.64,\n      386.31,\n      498.04,\n      582.51,\n      701.96,\n      813.69,\n      884.36,\n      996.09,\n      1088.27,\n    ],\n  },\n];\n\nconst PRESETS_MAP = PRESETS.reduce((map, elem) => {\n  map[elem.name] = elem;\n  return map;\n}, {});\n\nfunction parseCustomCentValuesStr(str) {\n  const values = str\n    .trim()\n    .split(/\\s+/)\n    .map((value) => parseFloat(value))\n    .sort((a, b) => a - b);\n\n  if (values.some((value) => isNaN(value))) {\n    throw new Error('Has invalid value which is not a number');\n  } else if (values.some((value) => value < 0 || value > CENTS_IN_OCTAVE)) {\n    throw new Error('Has out of range cent value (must be between 0 and 1200)');\n  }\n  return values;\n}\n\nfunction stringifyCustomCentValues(values) {\n  return values.join('\\n');\n}\n\nclass CustomSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      presetName: DEFAULT_PRESET_NAME,\n      customCentValuesStr: stringifyCustomCentValues(props.config.customCentValues),\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.state.customCentValuesStr !== nextProps.config.customCentValues) {\n      this.setState({\n        customCentValuesStr: stringifyCustomCentValues(nextProps.config.customCentValues),\n      });\n    }\n  }\n\n  onChangeCustomCentValues = (event) => {\n    this.setState({\n      customCentValuesStr: event.target.value,\n    });\n  };\n\n  onSaveCustomCentValues = (event) => {\n    try {\n      const values = parseCustomCentValuesStr(this.state.customCentValuesStr);\n      this.props.setConfig({\n        customCentValues: values,\n      });\n    } catch (error) {\n      alert('Sorry, there was an error interpreting these values.');\n    }\n  };\n\n  onChangePreset = (event) => {\n    const presetName = event.target.value;\n    const values = PRESETS_MAP[presetName].values;\n    this.setState({\n      presetName: presetName,\n    });\n    this.props.setConfig({\n      customCentValues: values,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"mt-4\">\n        <Label>Custom scale tuning</Label>\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <small className=\"text-muted\">\n              Enter cent values between 0 and 1200, separated by line breaks\n            </small>\n            <textarea\n              className=\"form-control\"\n              rows=\"10\"\n              value={this.state.customCentValuesStr}\n              onChange={this.onChangeCustomCentValues}\n            />\n            <div className=\"mt-3\">\n              <button className=\"btn btn-primary\" onClick={this.onSaveCustomCentValues}>\n                Apply\n              </button>\n            </div>\n          </div>\n          <div className=\"col-sm-6\">\n            <small className=\"text-muted\">...or select a preset:</small>\n            <select\n              className=\"form-control\"\n              value={this.state.presetName}\n              onChange={this.onChangePreset}\n            >\n              {PRESETS.map((preset) => (\n                <option value={preset.name} key={preset.name}>\n                  {preset.label}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CustomSettings;\n","import React from 'react';\nimport _ from 'lodash';\nimport pluralize from 'pluralize';\nimport classNames from 'classnames';\n\nimport Label from './Label';\nimport { getNoteLabel } from './noteHelpers';\n\nconst MAX_NUM_STEPS = 100;\nconst MAX_NUM_OCTAVES = 10;\n\nclass EqualTemperamentSettings extends React.Component {\n  reset() {\n    this.props.setConfig({\n      selectedNotes: {},\n    });\n  }\n\n  onChangeLowestNote = (event) => {\n    this.reset();\n    this.props.setConfig({\n      lowestNote: event.target.value,\n    });\n  };\n\n  onChangeNumOctaves = (event) => {\n    this.reset();\n    this.props.setConfig({\n      numOctaves: parseInt(event.target.value, 10),\n    });\n  };\n\n  onChangeNumSteps = (event) => {\n    this.reset();\n    this.props.setConfig({\n      numSteps: parseInt(event.target.value, 10),\n    });\n  };\n\n  onChangeSelectedNotes = (event) => {\n    const note = parseInt(event.target.name, 10);\n    const value = event.target.checked;\n\n    const selectedNotes = value\n      ? Object.assign({}, this.props.config.selectedNotes, { [note]: true })\n      : _.omit(this.props.config.selectedNotes, note);\n\n    this.props.setConfig({\n      selectedNotes: selectedNotes,\n    });\n  };\n\n  onClickResetSelectedNotes = () => {\n    this.reset();\n  };\n\n  renderStepSettings() {\n    return (\n      <div>\n        <div>\n          <Label>Octave division</Label>\n        </div>\n\n        <div className=\"form-inline\">\n          <select\n            className=\"form-control\"\n            value={this.props.config.numOctaves}\n            onChange={this.onChangeNumOctaves}\n          >\n            {_.range(MAX_NUM_OCTAVES).map((index) => {\n              const label = pluralize('octave', index + 1, true);\n              return (\n                <option value={index + 1} key={index}>\n                  {label}\n                </option>\n              );\n            })}\n          </select>\n          <span className=\"mx-2\">into</span>\n          <select\n            className=\"form-control\"\n            value={this.props.config.numSteps}\n            onChange={this.onChangeNumSteps}\n          >\n            {_.range(MAX_NUM_STEPS).map((index) => {\n              const label = pluralize('step', index + 1, true);\n              return (\n                <option value={index + 1} key={index}>\n                  {label}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n      </div>\n    );\n  }\n\n  renderNotePicker() {\n    return (\n      <div>\n        <div>\n          <Label>Notes to include</Label>\n        </div>\n\n        <div>\n          {_.range(this.props.config.numSteps).map((note) => {\n            return (\n              <label\n                className={classNames('mr-1 mb-1', 'NoteLabel', {\n                  'NoteLabel--selected': this.props.config.selectedNotes[note],\n                })}\n                key={note}\n              >\n                <input\n                  className=\"form-control d-none\"\n                  type=\"checkbox\"\n                  name={note}\n                  checked={!!this.props.config.selectedNotes[note]}\n                  onChange={this.onChangeSelectedNotes}\n                />\n                {getNoteLabel(this.props.config, note)}\n              </label>\n            );\n          })}\n          <button className=\"ml-4 btn btn-link\" onClick={this.onClickResetSelectedNotes}>\n            Reset\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  renderLowestNoteSetting() {\n    return (\n      <div>\n        <div>\n          <Label>Lowest frequency</Label>\n        </div>\n        <div className=\"form-inline\">\n          <select\n            className=\"form-control\"\n            value={this.props.config.lowestNote}\n            onChange={this.onChangeLowestNote}\n            style={{ width: '60px' }}\n          >\n            {['c3', 'c4', 'c5', 'c6'].map((noteName) => {\n              return (\n                <option value={noteName} key={noteName}>\n                  {noteName}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-sm-4 mt-4\">{this.renderStepSettings()}</div>\n        <div className=\"col-sm-2 mt-4\">{this.renderLowestNoteSetting()}</div>\n        <div className=\"col-sm-6 mt-4\">{this.renderNotePicker()}</div>\n      </div>\n    );\n  }\n}\n\nexport default EqualTemperamentSettings;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport CustomSettings from './CustomSettings';\nimport EqualTemperamentSettings from './EqualTemperamentSettings';\n\nclass Settings extends React.Component {\n  toggleCustomSettings(useCustom) {\n    this.props.setConfig({\n      useCustomCentValues: useCustom,\n    });\n  }\n\n  render() {\n    const activeClass = 'btn-primary';\n    const inactiveClass = 'btn-outline-secondary';\n    const { useCustomCentValues } = this.props.config;\n\n    return (\n      <div>\n        <div className=\"text-center\">\n          <div className=\"btn-group btn-group-lg\">\n            <button\n              className={classNames('btn', useCustomCentValues ? inactiveClass : activeClass)}\n              onClick={() => this.toggleCustomSettings(false)}\n            >\n              Equal temperament\n            </button>\n            <button\n              className={classNames('btn', useCustomCentValues ? activeClass : inactiveClass)}\n              onClick={() => this.toggleCustomSettings(true)}\n            >\n              Custom tuning\n            </button>\n          </div>\n        </div>\n        <div>\n          {useCustomCentValues ? (\n            <CustomSettings config={this.props.config} setConfig={this.props.setConfig} />\n          ) : (\n            <EqualTemperamentSettings config={this.props.config} setConfig={this.props.setConfig} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","import React from 'react';\n\nimport Keyboard from './Keyboard';\n\nfunction Tutorial(props) {\n  // TODO: swap in photos with own illustrations\n  // TODO: show weird physical microtone keyboards\n  return (\n    <div className=\"container my5\">\n      <div className=\"row\">\n        <div className=\"col-md-10 offset-md-1 col-lg-8 offset-lg-2\">\n          <h1 className=\"text-muted\">01. An introduction to microtones</h1>\n          <div className=\"row py-3\">\n            <div className=\"col-12 col-md-10 offset-md-1\">\n              <img\n                className=\"w-100\"\n                src=\"http://www.agnes-bruckner.com/apronus_images/facepiano.gif\"\n                alt=\"piano keyboard\"\n              />\n            </div>\n          </div>\n          <p>\n            C, Db, D, Eb, E, F, Gb, G, Ab, A, Bb, and B. From these 12 notes we can play pretty much\n            any song that we know of in modern music. The approach of dividing an octave equally is\n            known as \"equal temperament\". You can try it out with a 12EDO keyboard here.\n          </p>\n          <div>\n            <Keyboard\n              config={{\n                useCustomCentValues: false,\n                lowestNote: 'c4',\n                numOctaves: 1,\n                numSteps: 12,\n                selectedNotes: {},\n              }}\n              gain={props.gain}\n              bindEvents={false}\n            />\n          </div>\n          <p className=\"mt-3\">\n            This 12 tone scale originates back to 1584, when Zhu Zaiyu developed the mathematical\n            basis for dividing the octave equally into 12 parts. Zhu Zaiyu was a prince of the Ming\n            court in China, and spent thirty years researching equal temperament. He demonstrated\n            this 12 note division by constructing a set of bamboo pipes over three octaves, and\n            increasing the length of the each pipe by a factor of the twelfth root of 2.\n          </p>\n          <div className=\"row py-3\">\n            <div className=\"col-md-6 offset-md-3\">\n              <img\n                className=\"w-100\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/f/f2/%E4%B9%90%E5%BE%8B%E5%85%A8%E4%B9%A6%E5%85%A8-1154.jpg\"\n                alt=\"bamboo pipes\"\n              />\n            </div>\n          </div>\n          <p>The \"distance\", or \"interval\", between any two notes is the same in 12EDO.</p>\n          <p>\n            But you can make many more sounds than just these 12 notes. Just use your voice to hum\n            from C to D and you’ve produced a continuous spectrum of frequencies that aren't in\n            12EDO. And it’s not just voice. Here are some other instruments that can traverse\n            between notes:\n          </p>\n          <div className=\"row my-3\">\n            <div className=\"col-12 text-center\">\n              <img\n                height=\"150\"\n                src=\"https://static1.squarespace.com/static/57d2f09a6b8f5b98b30057f4/t/58cb1879414fb534eec71f43/1492026344786/\"\n                alt=\"trombone\"\n              />\n              <img\n                height=\"150\"\n                src=\"https://images-na.ssl-images-amazon.com/images/I/61NJglqoJVL._SL1500_.jpg\"\n                alt=\"otomatone\"\n              />\n              <img\n                height=\"150\"\n                src=\"http://media.guitarcenter.com/is/image/MMGS7/Prelude-Series-Violin-Outfit-1-8-Size/J05662000001000-00-500x500.jpg\"\n                alt=\"violin\"\n              />\n            </div>\n          </div>\n          <p>\n            Microtones refer to the use of intervals that don’t fit within this ubiquitous 12 tone\n            structure. Listen to this microtonal song:\n          </p>\n          <div>\n            <iframe\n              title=\"soundcloud_the_juggler\"\n              width=\"100%\"\n              height=\"150\"\n              scrolling=\"no\"\n              frameBorder=\"no\"\n              src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/146753233&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&amp;visual=true\"\n            />\n          </div>\n          <p>\n            The composer notes that this was written in 19EDO. You can play around with 19EDO here.\n            {/* TODO: use Composer to actually transcribe The Juggler */}\n          </p>\n          <div>\n            <Keyboard\n              config={{\n                useCustomCentValues: false,\n                lowestNote: 'c4',\n                numOctaves: 1,\n                numSteps: 19,\n                selectedNotes: {},\n              }}\n              gain={props.gain}\n              bindEvents={false}\n            />\n          </div>\n          <p>\n            Microtonal music can also sound quite strange and wonderful. This song by Sevish uses a\n            53EDO scale:\n          </p>\n          <div>\n            <iframe\n              title=\"soundcloud_sevish_droplet\"\n              width=\"100%\"\n              height=\"150\"\n              scrolling=\"no\"\n              frameBorder=\"no\"\n              src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/212652160&amp;color=%23b89890&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&amp;visual=true\"\n            />\n          </div>\n          <h2 className=\"h4 font-weight-bold mt4\">Frequencies and cents</h2>\n          <p>\n            Our perception of sound is on a logarithmic scale relative to frequency. An octave, from\n            C to C or D to D or so on, is when you double the frequency. Middle C is 440hz. Go up an\n            octave to 880hz. Being logarithmic isn’t super convenient relative to our perception,\n            which is linear. So we can use cents instead, which is defined as:\n          </p>\n          <div>\n            <iframe\n              title=\"binky_doesnt_understand\"\n              width=\"560\"\n              height=\"315\"\n              src=\"https://www.youtube.com/embed/taCNT81k1v8?rel=0\"\n              frameBorder=\"0\"\n              allowFullScreen\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Tutorial;\n","import React from 'react';\nimport _ from 'lodash';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport './App.css';\nimport Composer from './Composer';\nimport Footer from './Footer';\nimport GAListener from './GAListener';\nimport Header from './Header';\nimport Keyboard from './Keyboard';\nimport KeyboardLegend from './KeyboardLegend';\nimport Settings from './Settings';\nimport Tutorial from './Tutorial';\nimport { CENTS_IN_OCTAVE } from './noteHelpers';\n\nconst GAIN_VALUE = 0.1;\n\nfunction SettingsWrapper(props) {\n  return (\n    <div className=\"container d-flex flex-column height-full\">\n      <div className=\"flex-1\">{props.children}</div>\n      <div className=\"mt-5\">\n        <Settings config={props.config} setConfig={props.setConfig} />\n      </div>\n    </div>\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      config: {\n        useCustomCentValues: false,\n        // TODO: make this be in sync with CustomSettings preset\n        customCentValues: _.range(0, CENTS_IN_OCTAVE, 100),\n        lowestNote: 'c4',\n        numOctaves: 1,\n        numSteps: 24,\n        selectedNotes: {},\n      },\n    };\n  }\n\n  setConfig = (config) => {\n    this.setState({\n      config: Object.assign({}, this.state.config, config),\n    });\n  };\n\n  render() {\n    return (\n      <Router>\n        <GAListener trackingId=\"UA-145919044-1\">\n          <div className=\"d-flex flex-column height-full\">\n            <Header />\n            <div className=\"flex-1\" style={{ paddingTop: 80 }}>\n              <Route\n                exact\n                path=\"/\"\n                render={() => (\n                  <SettingsWrapper config={this.state.config} setConfig={this.setConfig}>\n                    <div className=\"d-flex flex-column\">\n                      <Keyboard className=\"mx-auto\" config={this.state.config} gain={GAIN_VALUE} />\n                      <div className=\"mx-auto\" style={{ paddingTop: 80 }}>\n                        <KeyboardLegend />\n                      </div>\n                    </div>\n                  </SettingsWrapper>\n                )}\n              />\n              <Route\n                exact\n                path=\"/composer\"\n                render={() => (\n                  <SettingsWrapper config={this.state.config} setConfig={this.setConfig}>\n                    <Composer config={this.state.config} gain={GAIN_VALUE} />\n                  </SettingsWrapper>\n                )}\n              />\n              <Route\n                exact\n                path=\"/composer/:shortID\"\n                render={(props) => (\n                  <SettingsWrapper config={this.state.config} setConfig={this.setConfig}>\n                    <Composer\n                      config={this.state.config}\n                      gain={GAIN_VALUE}\n                      shortID={props.match.params.shortID}\n                    />\n                  </SettingsWrapper>\n                )}\n              />\n              <Route exact path=\"/tutorial\" render={() => <Tutorial gain={GAIN_VALUE} />} />\n            </div>\n            <Footer className=\"mt-3\" />\n          </div>\n        </GAListener>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// App\nimport App from './App';\n\n// Styling\nimport 'typeface-inter';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}